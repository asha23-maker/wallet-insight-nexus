{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\wallet-insight-nexus\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport WalletForm from \"./components/WalletForm\";\nimport WalletStats from \"./components/WalletStats\";\nimport { fetchAddressStats } from \"./api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [stats, setStats] = useState(null);\n  const handleAnalyze = async addr => {\n    try {\n      const txs = await fetchAddressStats(addr);\n      if (!txs.length) return alert(\"No transactions or invalid address\");\n      const total = txs.length;\n      const incoming = txs.filter(tx => tx.to.toLowerCase() === addr.toLowerCase()).length;\n      const outgoing = total - incoming;\n      const fees = txs.map(tx => +tx.gasUsed * +tx.gasPrice);\n      const totalFeeNEX = fees.reduce((a, b) => a + b, 0) / 1e18;\n      const avgFee = totalFeeNEX / total;\n      setStats({\n        total,\n        incoming,\n        outgoing,\n        totalFee: totalFeeNEX.toFixed(6),\n        avgFee: avgFee.toFixed(6),\n        firstTx: txs[0].timeStamp,\n        lastTx: txs[txs.length - 1].timeStamp\n      });\n    } catch (err) {\n      alert(\"Error: \" + err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20,\n      fontFamily: 'Arial'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Wallet Insight \\u2014 Nexus Testnet III\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WalletForm, {\n      onAnalyze: handleAnalyze\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), stats && /*#__PURE__*/_jsxDEV(WalletStats, {\n      stats: stats\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ObG3PQx8JfBIfI6sMZG7E7DpkNc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","WalletForm","WalletStats","fetchAddressStats","jsxDEV","_jsxDEV","App","_s","stats","setStats","handleAnalyze","addr","txs","length","alert","total","incoming","filter","tx","to","toLowerCase","outgoing","fees","map","gasUsed","gasPrice","totalFeeNEX","reduce","a","b","avgFee","totalFee","toFixed","firstTx","timeStamp","lastTx","err","message","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","onAnalyze","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/wallet-insight-nexus/src/App.jsx"],"sourcesContent":["\nimport React, { useState } from \"react\";\nimport WalletForm from \"./components/WalletForm\";\nimport WalletStats from \"./components/WalletStats\";\nimport { fetchAddressStats } from \"./api\";\n\nfunction App() {\n  const [stats, setStats] = useState(null);\n\n  const handleAnalyze = async (addr) => {\n    try {\n      const txs = await fetchAddressStats(addr);\n      if (!txs.length) return alert(\"No transactions or invalid address\");\n\n      const total = txs.length;\n      const incoming = txs.filter(tx => tx.to.toLowerCase() === addr.toLowerCase()).length;\n      const outgoing = total - incoming;\n      const fees = txs.map(tx => +tx.gasUsed * +tx.gasPrice);\n      const totalFeeNEX = fees.reduce((a, b) => a + b, 0) / 1e18;\n      const avgFee = totalFeeNEX / total;\n\n      setStats({\n        total,\n        incoming,\n        outgoing,\n        totalFee: totalFeeNEX.toFixed(6),\n        avgFee: avgFee.toFixed(6),\n        firstTx: txs[0].timeStamp,\n        lastTx: txs[txs.length - 1].timeStamp,\n      });\n    } catch (err) {\n      alert(\"Error: \" + err.message);\n    }\n  };\n\n  return (\n    <div style={{ padding: 20, fontFamily: 'Arial' }}>\n      <h1>Wallet Insight â€” Nexus Testnet III</h1>\n      <WalletForm onAnalyze={handleAnalyze} />\n      {stats && <WalletStats stats={stats} />}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,SAASC,iBAAiB,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMU,aAAa,GAAG,MAAOC,IAAI,IAAK;IACpC,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMT,iBAAiB,CAACQ,IAAI,CAAC;MACzC,IAAI,CAACC,GAAG,CAACC,MAAM,EAAE,OAAOC,KAAK,CAAC,oCAAoC,CAAC;MAEnE,MAAMC,KAAK,GAAGH,GAAG,CAACC,MAAM;MACxB,MAAMG,QAAQ,GAAGJ,GAAG,CAACK,MAAM,CAACC,EAAE,IAAIA,EAAE,CAACC,EAAE,CAACC,WAAW,CAAC,CAAC,KAAKT,IAAI,CAACS,WAAW,CAAC,CAAC,CAAC,CAACP,MAAM;MACpF,MAAMQ,QAAQ,GAAGN,KAAK,GAAGC,QAAQ;MACjC,MAAMM,IAAI,GAAGV,GAAG,CAACW,GAAG,CAACL,EAAE,IAAI,CAACA,EAAE,CAACM,OAAO,GAAG,CAACN,EAAE,CAACO,QAAQ,CAAC;MACtD,MAAMC,WAAW,GAAGJ,IAAI,CAACK,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI;MAC1D,MAAMC,MAAM,GAAGJ,WAAW,GAAGX,KAAK;MAElCN,QAAQ,CAAC;QACPM,KAAK;QACLC,QAAQ;QACRK,QAAQ;QACRU,QAAQ,EAAEL,WAAW,CAACM,OAAO,CAAC,CAAC,CAAC;QAChCF,MAAM,EAAEA,MAAM,CAACE,OAAO,CAAC,CAAC,CAAC;QACzBC,OAAO,EAAErB,GAAG,CAAC,CAAC,CAAC,CAACsB,SAAS;QACzBC,MAAM,EAAEvB,GAAG,CAACA,GAAG,CAACC,MAAM,GAAG,CAAC,CAAC,CAACqB;MAC9B,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZtB,KAAK,CAAC,SAAS,GAAGsB,GAAG,CAACC,OAAO,CAAC;IAChC;EACF,CAAC;EAED,oBACEhC,OAAA;IAAKiC,KAAK,EAAE;MAAEC,OAAO,EAAE,EAAE;MAAEC,UAAU,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBAC/CpC,OAAA;MAAAoC,QAAA,EAAI;IAAkC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3CxC,OAAA,CAACJ,UAAU;MAAC6C,SAAS,EAAEpC;IAAc;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACvCrC,KAAK,iBAAIH,OAAA,CAACH,WAAW;MAACM,KAAK,EAAEA;IAAM;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEV;AAACtC,EAAA,CApCQD,GAAG;AAAAyC,EAAA,GAAHzC,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}